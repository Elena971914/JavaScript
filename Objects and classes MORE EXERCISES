01. Class Storage

class Storage {
    constructor(capacity) {
        this.capacity = capacity;
        this.storage = [];
    }

    get totalCost() {
        return this.storage.reduce((acc, curr) => {return acc+curr.price * curr.quantity},0);
    }

    addProduct(product) {
        this.storage.push(product);
        this.capacity -= product.quantity;
        return;
    }

    getProducts() {
        result = [];
        this.storage.forEach(element => {result.push(JSON.stringify(element))
        });
        return result.join('\n');
    }
}
const Storage = result;

let productOne = {name: 'Cucamber', price: 1.50, quantity: 15};
let productTwo = {name: 'Tomato', price: 0.90, quantity: 25};
let productThree = {name: 'Bread', price: 1.10, quantity: 8};

let storage = new Storage(50);

storage.addProduct(productOne);
storage.addProduct(productTwo);
storage.addProduct(productThree);

let output = storage.getProducts();

expect(output).to.equal('{"name":"Cucamber","price":1.5,"quantity":15}\n{"name":"Tomato","price":0.9,"quantity":25}\n{"name":"Bread","price":1.1,"quantity":8}');
expect(storage.capacity).to.equal(2);
expect(storage.totalCost).to.equal(53.8);

🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎
02. Catalogue

function solve(input) {
    const products = input.reduce((acc, curr) => {
        let [name, price] = curr.split(' : ');
        acc[name] = price;
        return acc;
    }, {})

    sorted = Object.keys(products)
        .map(key => key.toLowerCase())
        .sort()

    let letter = sorted[0][0]

    for (let key of sorted) {
        for (let originalKey of Object.keys(products)) {
            if (key === originalKey.toLowerCase()) {
                if (originalKey[0][0] !== letter) {
                    letter = originalKey[0]
                    console.log(letter)
                }
                console.log(`  ${originalKey}: ${products[originalKey]}`)
            }
        }
    }
}

solve([
    'Appricot : 20.4',
    'Fridge : 1500',
    'TV : 1499',
    'Deodorant : 10',
    'Boiler : 300',
    'Apple : 1.25',
    'Anti-Bug Spray : 15',
    'T-Shirt : 10'
])
🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎
03. Class Laptop

class Laptop {
    constructor(info, quality) {
        this.info = {
            producer: info.producer,
            age: info.age,
            brand: info.brand,
        };
        this.quality = quality;
        this.isOn = false;
    }

    turnOn() {
        this.isOn = true;
        this.quality -= 1
    };

    turnOff() {
        this.isOn = false;
        this.quality -= 1
    };

    showInfo() { return JSON.stringify(this.info) }

    get price() {return Number((800 - (this.info.age * 2)) + (this.quality * 0.5))}
}


let info = {
    producer: "Dell", age: 2,
    brand: "XPS"
}
let laptop = new Laptop(info, 10)
laptop.turnOn()
console.log(laptop.showInfo())
laptop.turnOff()
console.log(laptop.quality)
laptop.turnOn()
console.log(laptop.isOn)
console.log(laptop.price)

🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎
04. Flight Schedule


🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎
05. School Register


🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎
06. Browser History


🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎
07. Sequences


🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎
08. Garage


🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎
09. Armies


🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎
10. Comments


🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎
11. Book Shelf


🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎🌎
12. SoftUni Students
