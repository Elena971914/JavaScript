Objects are always assigned by refference. If we change them in a function they are changed out of the function as well.
Making a copy : a = {a: 1} ; aCopy = {...a}

This is not like that when we are working with primitive types:

function getCityInfo(a) {
    a = 20;
    }
let a = 10;

console.log(a)
getCityInfo(a)
console.log(a) 

//10
//10

01. Person info

function getPersonInfo(firstName, lastName, age) {
    person = {
        firstName,
        lastName,
        age
    };

    return person;
}

☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️

02. City 

function getCityInfo(city) {
    let entries = Object.entries(city);
    for (let [ key, value ] of entries) {
    console.log(`${key} -> ${value}`);
    }
}

---VAR2

function getCityInfo(obj) {
    keys = Object.keys(obj)
    for (let key of keys) {
        console.log(`${key} -> ${obj[key]}`)
    }
}

getCityInfo({
    name: "Plovdiv",
    area: 389,
    population: 1162358,
    country: "Bulgaria",
    postCode: "4000"
   }
)

☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️

03. City Taxes

function cityTaxes(name, population, treasury) {
    cityObj = {
        name, 
        population,
        treasury,
        taxRate: 10,
        collectTaxes() {this.treasury += Math.floor(this.population * this.taxRate)},
        applyGrowth(percentage) {this.population += Math.floor(this.population * percentage/100)},
        applyRecession(percentage) {this.treasury -= Math.floor(this.treasury * percentage/100)}
    }
    return cityObj
}

const city =
 cityTaxes('Tortuga',
 7000,
 15000);
city.collectTaxes();
console.log(city.treasury);
city.applyGrowth(5);
console.log(city.population);

ARROW functions don't have their own context of this. It always get the this from the function they are in. (Not from the object they are called on)
If the functions are assigned to a variable, the context of this will be lost.

//let grow = city.applyGrowth(5);

----------

function createGame() {
  let score = 0;

return {
  inc: () => score++,
  get: () => console.log(score),
 };
}

const game = createGame();
game.get();
game.inc();
game.get{};

//0
//1

☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️

04. Convert to Object


☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️

05. Convert to JSON


☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️

06. Phone Book


☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️

07. Meetings


☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️

08. Address Book


☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️

09. Cats


☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️☘️

10. Songs
